--------------------------------------------------------------------------------
-- Copyright (c) 1995-2007 Xilinx, Inc.  All rights reserved.
--------------------------------------------------------------------------------
--   ____  ____ 
--  /   /\/   / 
-- /___/  \  /    Vendor: Xilinx 
-- \   \   \/     Version : 9.1.03i
--  \   \         Application : xaw2vhdl
--  /   /         Filename : ddr_dcm.vhd
-- /___/   /\     Timestamp : 06/13/2007 11:08:54
-- \   \  /  \ 
--  \___\/\___\ 
--
--Command: xaw2vhdl-st D:\Telops\FIR-00186\src\Clocks\ddr_dcm.xaw D:\Telops\FIR-00186\src\Clocks\ddr_dcm
--Design Name: ddr_dcm
--Device: xc4vfx12-sf363-10
--
-- Module ddr_dcm
-- Generated by Xilinx Architecture Wizard
-- Written for synthesis tool: XST

library ieee;
use ieee.std_logic_1164.ALL;
use ieee.numeric_std.ALL;
library UNISIM;
use UNISIM.Vcomponents.ALL;
library common_hdl;

entity ddr_dcm is
   port ( 
      CLKIN_IN   : in    std_logic; 
      RST_IN     : in    std_logic; 
      CLK0_OUT   : out   std_logic; 
      CLK90_OUT  : out   std_logic; 
      DCM_NOT_LOCKED : out   std_logic);
end ddr_dcm;          

-- translate_off
--architecture asim of ddr_dcm is
--begin                     
--   
--   CLK0_OUT <= CLKIN_IN;
--   CLK90_OUT <= transport CLKIN_IN after 1.25 ns;
--   
--   clock_proc : process (CLKIN_IN)
--      variable delay : integer range 0 to 31 := 0;
--   begin          
--      if RST_IN = '1' then
--         DCM_NOT_LOCKED <= '1';
--      elsif rising_edge(CLKIN_IN) then
--         if delay < 31 then
--            delay := delay + 1;
--         end if;                                
--         if delay > 23 then
--            DCM_NOT_LOCKED <= '0';
--         else              
--            DCM_NOT_LOCKED <= '1';
--         end if;     
--      end if;      
--   end process;   
--   
--end asim;   
-- translate_on

architecture BEHAVIORAL of ddr_dcm is
   signal CLKFB_IN   : std_logic;
   signal CLK0_BUF   : std_logic;
   signal CLK90_BUF  : std_logic;
   signal GND_BIT    : std_logic;
   signal GND_BUS_7  : std_logic_vector (6 downto 0);
   signal GND_BUS_16 : std_logic_vector (15 downto 0);   
   signal dcm_locked : std_logic; 
   signal dcm_rst    : std_logic;
   
   component BUFG
      port ( I : in    std_logic; 
         O : out   std_logic);
   end component;
   
   component dcm_reset
      port(
         RST_IN   : in std_logic;
         DCM_RST  : out std_logic;
         CLK      : in std_logic);
   end component;
   
   component DCM_ADV
      generic( CLK_FEEDBACK : string :=  "1X";
         CLKDV_DIVIDE : real :=  2.0;
         CLKFX_DIVIDE : integer :=  1;
         CLKFX_MULTIPLY : integer :=  4;
         CLKIN_DIVIDE_BY_2 : boolean :=  FALSE;
         CLKIN_PERIOD : real :=  5.7142857;
         CLKOUT_PHASE_SHIFT : string :=  "NONE";
         DCM_AUTOCALIBRATION : boolean :=  TRUE;
         DCM_PERFORMANCE_MODE : string :=  "MAX_SPEED";
         DESKEW_ADJUST : string :=  "SYSTEM_SYNCHRONOUS";
         DFS_FREQUENCY_MODE : string :=  "HIGH";
         DLL_FREQUENCY_MODE : string :=  "HIGH";
         DUTY_CYCLE_CORRECTION : boolean :=  TRUE;
         FACTORY_JF : bit_vector :=  x"F0F0";
         PHASE_SHIFT : integer :=  0;
         STARTUP_WAIT : boolean :=  FALSE;
         SIM_DEVICE : string :=  "VIRTEX4");
      port ( CLKIN    : in    std_logic; 
         CLKFB    : in    std_logic; 
         DADDR    : in    std_logic_vector (6 downto 0); 
         DI       : in    std_logic_vector (15 downto 0); 
         DWE      : in    std_logic; 
         DEN      : in    std_logic; 
         DCLK     : in    std_logic; 
         RST      : in    std_logic; 
         PSEN     : in    std_logic; 
         PSINCDEC : in    std_logic; 
         PSCLK    : in    std_logic; 
         CLK0     : out   std_logic; 
         CLK90    : out   std_logic; 
         CLK180   : out   std_logic; 
         CLK270   : out   std_logic; 
         CLKDV    : out   std_logic; 
         CLK2X    : out   std_logic; 
         CLK2X180 : out   std_logic; 
         CLKFX    : out   std_logic; 
         CLKFX180 : out   std_logic; 
         DRDY     : out   std_logic; 
         DO       : out   std_logic_vector (15 downto 0); 
         LOCKED   : out   std_logic; 
         PSDONE   : out   std_logic);
   end component;
   
begin
   GND_BIT <= '0';
   GND_BUS_7(6 downto 0) <= "0000000";
   GND_BUS_16(15 downto 0) <= "0000000000000000";
   CLK0_OUT <= CLKFB_IN;    
   DCM_NOT_LOCKED <= not dcm_locked;
   CLK0_BUFG_INST : BUFG
   port map (I=>CLK0_BUF,
      O=>CLKFB_IN);
   
   CLK90_BUFG_INST : BUFG
   port map (I=>CLK90_BUF,
      O=>CLK90_OUT);
   
   the_dcm_reset : dcm_reset
   port map(
      RST_IN => RST_IN,
      DCM_RST => dcm_rst,
      CLK => CLKIN_IN
      );          
   
   DCM_ADV_INST : DCM_ADV
   generic map( CLK_FEEDBACK => "1X",
   CLKDV_DIVIDE => 2.0,
   CLKFX_DIVIDE => 1,
   CLKFX_MULTIPLY => 4,
   CLKIN_DIVIDE_BY_2 => FALSE,
   CLKIN_PERIOD => 6.6666666666,
   CLKOUT_PHASE_SHIFT => "NONE",
   DCM_AUTOCALIBRATION => TRUE,
   DCM_PERFORMANCE_MODE => "MAX_RANGE",  -- OBO was "MAX_SPEED" need to lock at 50Mhz input
   DESKEW_ADJUST => "SYSTEM_SYNCHRONOUS",
   DFS_FREQUENCY_MODE => "HIGH",
   DLL_FREQUENCY_MODE => "HIGH", -- OBO was "HIGH" need to lock at 50Mhz input
   DUTY_CYCLE_CORRECTION => TRUE,
   FACTORY_JF => x"F0F0",
   PHASE_SHIFT => 0,
   STARTUP_WAIT => FALSE)
   port map (CLKFB=>CLKFB_IN,
      CLKIN=>CLKIN_IN,
      DADDR(6 downto 0)=>GND_BUS_7(6 downto 0),
      DCLK=>GND_BIT,
      DEN=>GND_BIT,
      DI(15 downto 0)=>GND_BUS_16(15 downto 0),
      DWE=>GND_BIT,
      PSCLK=>GND_BIT,
      PSEN=>GND_BIT,
      PSINCDEC=>GND_BIT,
      RST=>dcm_rst,
      CLKDV=>open,
      CLKFX=>open,
      CLKFX180=>open,
      CLK0=>CLK0_BUF,
      CLK2X=>open,
      CLK2X180=>open,
      CLK90=>CLK90_BUF,
      CLK180=>open,
      CLK270=>open,
      DO=>open,
      DRDY=>open,
      LOCKED=>dcm_locked,
      PSDONE=>open);
   
end BEHAVIORAL;


